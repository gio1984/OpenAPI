{
  "openapi": "3.0.0",
  "info": {
    "title": "API_test",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/newuser": {
      "post": {
        "summary": "Create New User",
        "operationId": "post-newuser",
        "responses": {
          "200": {
            "description": "User Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "New User Bob Fellow": {
                    "value": {
                      "status": "created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing Required Information"
          },
          "409": {
            "description": "Email Already Taken"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "Create User Bob Fellow": {
                  "value": {
                    "firstName": "Bob",
                    "lastName": "Fellow",
                    "email": "bob.fellow@gmail.com"
                  }
                }
              }
            }
          },
          "description": "Post the necessary fields for the API to create a new user."
        },
        "description": "Registration of a new user."
      },
      "parameters": []
    },
    "/auth": {
      "post": {
        "summary": "",
        "operationId": "post-auth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": "Authenticated"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable"
          }
        },
        "description": "Login with basic authentication (username and password)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object"
              }
            }
          }
        },
        "parameters": []
      }
    },
    "/items": {
      "post": {
        "summary": "",
        "operationId": "post-newitem",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Creating new item to sell, with all the information related",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "Insert all fields of the item to to create"
        }
      },
      "parameters": [],
      "get": {
        "summary": "",
        "operationId": "get-items",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": 0,
                      "title": "string",
                      "description": "string",
                      "category": "string",
                      "location": "string",
                      "images": [
                        "string"
                      ],
                      "price": 0,
                      "datePosting": "2019-08-24",
                      "deliveryType": "Shipper"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/date"
          },
          {
            "$ref": "#/components/parameters/category"
          }
        ],
        "description": "Get the items filtered by the parameters  "
      }
    },
    "/items/{itemId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "itemId",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "patch-items-itemId",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "description": "User can modify the item's fields posted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "description": "Items fields"
        }
      },
      "delete": {
        "summary": "",
        "operationId": "delete-items-itemId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "User can delete his/her post"
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "description": "",
        "x-examples": {
          "Alice Smith": {
            "id": 142,
            "username": "Test",
            "email": "alice.smith@gmail.com",
            "password": "passTest"
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the given user."
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "email"
        ]
      },
      "Item": {
        "title": "Item",
        "type": "object",
        "description": "Item ",
        "x-examples": {
          "example-1": {
            "id": "string",
            "title": "string",
            "description": "string",
            "category": "string",
            "location": "string",
            "images": null,
            "price": 0,
            "datePosting": "2019-08-24",
            "deliveryType": "Shipper"
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "maxItems": 4,
            "items": {
              "type": "string"
            }
          },
          "price": {
            "type": "number"
          },
          "datePosting": {
            "type": "string",
            "format": "date"
          },
          "deliveryType": {
            "type": "string",
            "enum": [
              "Shipper",
              "Pickup"
            ]
          }
        },
        "required": [
          "title",
          "description",
          "category",
          "location",
          "price",
          "deliveryType"
        ]
      }
    },
    "securitySchemes": {
      "API Key - 1": {
        "name": "API Key",
        "type": "apiKey",
        "in": "header"
      }
    },
    "parameters": {
      "location": {
        "name": "location",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Filter by location"
      },
      "date": {
        "name": "date",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Items by date of posting"
      },
      "category": {
        "name": "category",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Items by category"
      }
    },
    "examples": {
      "ex": {
        "value": {
          "description": "Example shared example",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ]
        }
      }
    },
    "responses": {}
  }
}